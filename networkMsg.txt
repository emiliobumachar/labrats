Here's my first proposal for what a network package might look like:
Encrypted and signed using the shared key in the safe file, but let's do that last.
First 12 bytes: random number between zero and 999999999999, generated by the ATM on startup, and always used in messages from or to that atm. This will help the bank deal with multiple atms. Expressed as ascii digits
A space.
Next 12 bytes: sequential number between zero and 999999999999, starting at zero, incremented when the same sender sends a new message. To prevent replay attacks and reordering attacks.
A space.
Next 12 bytes (server only): a copy of the sequential number of the atm message it's replying to. 
A space.
Next byte (server only): 'y' or 'n', meaning yes or no to the atm solicitation.
A space.
Next byte (atm only):'n','d','w', or 'g', depending on the action solicited
A space.
Next four bytes: ' do ' or 'erro', depending on whether the atm's error checking is clean or not. Messages marked 'erro' will help the bank print the error.
A space. 
Next few bytes (atm only): amount or balance, if applicable, surrounded by $'s. Example: $14.21$
A space.
Next many bytes(atm only): account, finished by an asterisk.
A space.
Padding to match a predetermined total message length. This is to prevent attackers from knowing the operation or account from the message length.